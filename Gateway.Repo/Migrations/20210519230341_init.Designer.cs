// <auto-generated />
using System;
using GatewayTask.Repo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GatewayTask.Repo.Migrations
{
    [DbContext(typeof(GatewayContext))]
    [Migration("20210519230341_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GatewayTask.Data.Entities.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("GatewayId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<long>("UID")
                        .HasColumnType("bigint");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GatewayId");

                    b.ToTable("Device");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2021, 5, 20, 1, 3, 41, 351, DateTimeKind.Local).AddTicks(8442),
                            GatewayId = 1,
                            Modified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true,
                            UID = 11122L,
                            Vendor = "Device 1 Vendor"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2021, 5, 20, 1, 3, 41, 352, DateTimeKind.Local).AddTicks(73),
                            GatewayId = 1,
                            Modified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true,
                            UID = 12347L,
                            Vendor = "Device 2 Vendor"
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2021, 5, 20, 1, 3, 41, 352, DateTimeKind.Local).AddTicks(120),
                            GatewayId = 2,
                            Modified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true,
                            UID = 331117L,
                            Vendor = "Device 3 Vendor"
                        });
                });

            modelBuilder.Entity("GatewayTask.Data.Entities.Gateway", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPv4Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gateways");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2021, 5, 20, 1, 3, 41, 349, DateTimeKind.Local).AddTicks(3384),
                            IPv4Address = "http",
                            Modified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "First Gateway",
                            SerialNumber = "123456789-77-1"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2021, 5, 20, 1, 3, 41, 350, DateTimeKind.Local).AddTicks(4591),
                            IPv4Address = "http",
                            Modified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Second Gateway",
                            SerialNumber = "123456789-33-2"
                        });
                });

            modelBuilder.Entity("GatewayTask.Data.Entities.Device", b =>
                {
                    b.HasOne("GatewayTask.Data.Entities.Gateway", null)
                        .WithMany("Devices")
                        .HasForeignKey("GatewayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GatewayTask.Data.Entities.Gateway", b =>
                {
                    b.Navigation("Devices");
                });
#pragma warning restore 612, 618
        }
    }
}
